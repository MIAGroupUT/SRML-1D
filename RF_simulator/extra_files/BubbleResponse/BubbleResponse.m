%% Rayleigh-Plesset solver
% Simulates the acoustic response of a microbubble. The bubble responses is 
% computed with a Marmottant-type Rayleigh-Plesset equation, which takes 
% viscous, radiation, shell, and thermal damping into account. 
%
% Nathan Blanken, University of Twente, 2021

clear; clc; close all

dispFig = false;            % Display figures

% Add the functions folder to path
addpath '..\..\RF_simulatorFINAL'
addpath '..\..\RF_simulatorFINAL\functions'

% Get the transducer transfer functions of the P4-1 transducer
T = load('TransmitTransferFunctionFit.mat');

%% Pulse properties
pulse.A = 75e3;             % Acoustic pressure amplitude (Pa)
pulse.Nc = 16;              % Total number of cycles
pulse.fs = T.Fs;         	% Simulation sampling rate (Hz)
pulse.Tresp = 4e-6;     	% Echo receive time after pulse (s)
pulse.f = 1.7e6;            % Driving frequency (Hz)
pulse.w = pulse.f*2*pi;     % Angular frequency (Hz)

% Time vector pulse:
pulse.t = 0:1/pulse.fs:(pulse.Nc/pulse.f + pulse.Tresp);

% Pulse with Nc cycles and Hann window:
pulse.p = pulse.A*sin(2*pi*pulse.f*pulse.t)... 
    .*sin(pi*pulse.f/pulse.Nc*pulse.t).^2;
pulse.p(pulse.t>pulse.Nc/pulse.f) = 0;

%% Material properties and environmental conditions
[liquid, gas] = getMaterialProperties();

% Select a thermal model: 'Adiabatic', 'Isothermal', or 'Propsperetti':
liquid.ThermalModel = 'Prosperetti';

%% Microbubble properties

R0 = linspace(1.6,3.1,31);     	% List of bubble radii (um)
R0 = R0*1e-6;                   % List of bubble radii (m)

% Peak-to-peak scattered pressure:
Ps_pk2pk = zeros(1,length(R0));

%% Simulate the bubble response for a range of radii

for n = 1:length(R0)
    % Simulate the pulse generated by a transducer with transfer
    % function T resulting from a three-level driving signal:

    bubble.R0 = R0(n);          % Bubble radius (m)
    bubble.r0 = 0.01;           % Distance bubble to pressure sensor(m)

    shell.model = 'Segers';     % Marmottant, Segers, or SegersTable

    % Typical value intial surface tension: Sijl et al., J. Acoust.
    % Soc. Am., 129, 1729 (2011)
    shell.sig_0 = 10e-3;        % Equil. surface tension bubble (N/m);
    shell = getShellProperties(bubble,shell,liquid);

    %% Bubble response

    % Compute the radial response
    [response, eqparam] = calcBubbleResponse(liquid, ...
    gas, shell, bubble, pulse);

    % Do not compute the rapidly decaying r^(-3) term:
    nearfield = false;        
    % Compute the scattered pressure:
    scatter = calc_scatter(response,liquid,bubble,pulse,nearfield);
    
    % Peak-to-peak scattered pressure:
    Ps_pk2pk(n) = max(scatter.ps)-min(scatter.ps);


end


%%
plot(R0*1e6,Ps_pk2pk)
xlabel('Microbubble radius (um)')
ylabel('Peak-to-peak scattered pressure (Pa)')
title('16 cycle pulse, 75 kPa')




